{"version":3,"sources":["Video1.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["socket","socketId","Video","props","changeCssVideos","main","minWidth","offsetWidth","height","String","width","videos","querySelectorAll","a","length","style","minHeight","setProperty","connectToSocketServer","io","connect","secure","on","emit","window","location","href","id","addMessage","videoInfo","console","table","videoTime","play_time","setState","videoUrl","video_url","listenVideoTime","newTime","sender","socketIdSender","log","seekToTime","paused","videoPaused","pauseVideo","playVideo","clients","setTimeout","cTime","document","getElementById","currentTime","uploadVideoTime","connected","openChat","showModal","newmessages","closeChat","toggleChat","state","handleMessage","e","message","target","value","data","prevState","messages","video","addEventListener","Math","floor","lastCurrentTime","abs","uploadVideoState","handleVideoUrl","username","sendMessage","play","pause","localVideoref","React","createRef","videoAvailable","audioAvailable","audio","screen","screenAvailable","faker","internet","userName","this","background","padding","textAlign","margin","marginTop","justifyContent","fontWeight","paddingRight","Input","placeholder","onChange","Button","variant","color","onClick","paddingTop","ref","autoPlay","muted","borderStyle","borderColor","objectFit","className","controls","controlsList","src","hidden","Modal","Body","overflow","overflowY","map","item","index","key","wordBreak","Footer","backgroundColor","Badge","badgeContent","max","IconButton","Component","Home","handleChange","url","join","split","random","toString","substring","fontSize","marginBottom","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ce38a460.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport io from 'socket.io-client'\r\nimport faker from \"faker\"\r\n\r\nimport {IconButton, Badge, Input, Button} from '@material-ui/core'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\n\r\n// import { Row } from 'reactstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport \"./Video.css\"\r\n\r\nconst server_url = process.env.NODE_ENV === 'production' ? 'http://rtmeeting.vercel.app' : \"http://rtmeeting.vercel.app\"\r\n\r\nvar connections = {}\r\nvar socket = null\r\nvar socketId = null\r\nvar elms = 0\r\n\r\nclass Video extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.localVideoref = React.createRef()\r\n\r\n\t\tthis.videoAvailable = false\r\n\t\tthis.audioAvailable = false\r\n\t\tthis.videoUrl = null\r\n\t\tthis.videoTime = 0\r\n\t\tthis.videoPaused = false\r\n\t\tthis.lastCurrentTime = 0\r\n\r\n\t\tthis.state = {\r\n\t\t\tvideo: false,\r\n\t\t\taudio: false,\r\n\t\t\tscreen: false,\r\n\t\t\tshowModal: false,\r\n\t\t\tscreenAvailable: false,\r\n\t\t\tmessages: [],\r\n\t\t\tmessage: \"\",\r\n\t\t\tnewmessages: 0,\r\n\t\t\tconnected: false,\r\n\t\t\tusername: faker.internet.userName(),\r\n\t\t\tvideoUrl: null\r\n\t\t}\r\n\t\tconnections = {}\r\n\t}\r\n\r\n\tchangeCssVideos = (main) => {\r\n\t\tlet widthMain = main.offsetWidth\r\n\t\tlet minWidth = \"30%\"\r\n\t\tif ((widthMain * 30 / 100) < 300) {\r\n\t\t\tminWidth = \"300px\"\r\n\t\t}\r\n\t\tlet minHeight = \"40%\"\r\n\r\n\t\tlet height = String(100 / elms) + \"%\"\r\n\t\tlet width = \"\"\r\n\t\tif(elms === 0 || elms === 1) {\r\n\t\t\twidth = \"100%\"\r\n\t\t\theight = \"100%\"\r\n\t\t} else if (elms === 2) {\r\n\t\t\twidth = \"45%\"\r\n\t\t\theight = \"100%\"\r\n\t\t} else if (elms === 3 || elms === 4) {\r\n\t\t\twidth = \"35%\"\r\n\t\t\theight = \"50%\"\r\n\t\t} else {\r\n\t\t\twidth = String(100 / elms) + \"%\"\r\n\t\t}\r\n\r\n\t\tlet videos = main.querySelectorAll(\"video\")\r\n\t\tfor (let a = 0; a < videos.length; ++a) {\r\n\t\t\tvideos[a].style.minWidth = minWidth\r\n\t\t\tvideos[a].style.minHeight = minHeight\r\n\t\t\tvideos[a].style.setProperty(\"width\", width)\r\n\t\t\tvideos[a].style.setProperty(\"height\", \"auto\")\r\n\t\t}\r\n\r\n\t\treturn {minWidth, minHeight, width, height}\r\n\t}\r\n\r\n\tconnectToSocketServer = () => {\r\n\t\tsocket = io.connect(server_url, { secure: true })\r\n\r\n\t\t// socket.on('signal', this.gotMessageFromServer)\r\n\r\n\t\tsocket.on('connect', () => {\r\n\t\t\tsocket.emit('join-call', window.location.href)\r\n\t\t\tsocketId = socket.id\r\n\r\n\t\t\tsocket.on('chat-message', this.addMessage)\r\n\r\n\t\t\t// socket.on('user-left', (id) => {\r\n\t\t\t// \tlet video = document.querySelector(`[data-socket=\"${id}\"]`)\r\n\t\t\t// \tif (video !== null) {\r\n\t\t\t// \t\telms--\r\n\t\t\t// \t\tvideo.parentNode.removeChild(video)\r\n\r\n\t\t\t// \t\tlet main = document.getElementById('main')\r\n\t\t\t// \t\tthis.changeCssVideos(main)\r\n\t\t\t// \t}\r\n\t\t\t// })\r\n\r\n\t\t\tsocket.on('video-info', (videoInfo) => {\r\n\t\t\t\tconsole.table(videoInfo)\r\n\t\t\t\tthis.videoTime = videoInfo.play_time\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tvideoUrl: videoInfo.video_url\r\n\t\t\t\t}, () => {\r\n\t\t\t\t\t// if (this.videoTime != 0) {\r\n\t\t\t\t\t// \tthis.seekToTime()\r\n\t\t\t\t\t// }\r\n\t\t\t\t\tthis.listenVideoTime()\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tsocket.on('video-time', (newTime, sender, socketIdSender) => {\r\n\t\t\t\tconsole.log('got remote time: ' + newTime)\r\n\t\t\t\tthis.videoTime = newTime\r\n\t\t\t\tthis.seekToTime()\r\n\t\t\t})\r\n\r\n\t\t\tsocket.on('video-state', (paused, sender, socketIdSender) => {\r\n\t\t\t\tconsole.log('got remote state: ' + paused)\r\n\t\t\t\tthis.videoPaused = paused\r\n\t\t\t\tif (paused) {\r\n\t\t\t\t\tthis.pauseVideo()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.playVideo()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tsocket.on('user-joined', (id, clients) => {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (this.videoUrl) {\r\n\t\t\t\t\t\tlet cTime = document.getElementById('my-video').currentTime\r\n\t\t\t\t\t\tthis.uploadVideoTime(cTime)\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 1000);\r\n\t\t\t})\r\n\t\t\t// 连接成功\r\n\t\t\tthis.setState({\r\n\t\t\t\tconnected: true\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\topenChat = () => this.setState({ showModal: true, newmessages: 0 })\r\n\tcloseChat = () => this.setState({ showModal: false })\r\n\ttoggleChat = () => {\r\n\t\tif (this.state.showModal) {\r\n\t\t\tthis.closeChat()\r\n\t\t} else {\r\n\t\t\tthis.openChat()\r\n\t\t}\r\n\t}\r\n\thandleMessage = (e) => this.setState({ message: e.target.value })\r\n\r\n\taddMessage = (data, sender, socketIdSender) => {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tmessages: [...prevState.messages, { \"sender\": sender, \"data\": data }],\r\n\t\t}))\r\n\t\tif (socketIdSender !== socketId) {\r\n\t\t\tthis.setState({ newmessages: this.state.newmessages + 1 })\r\n\t\t}\r\n\t}\r\n\t\r\n\tseekToTime = () => {\r\n\t\tlet video = document.getElementById('my-video')\r\n\t\tvideo.currentTime = this.videoTime\r\n\t}\r\n\r\n\tlistenVideoTime = () => {\r\n\t\tlet video = document.getElementById('my-video')\r\n\t\tvideo.addEventListener('timeupdate', () => {\r\n\t\t\tvar currentTime = Math.floor(video.currentTime);\r\n\t\t\tif (currentTime - this.lastCurrentTime > 1 || currentTime - this.lastCurrentTime < 0) {\r\n\t\t\t\tconsole.log(currentTime)\r\n\t\t\t\tif (Math.abs(currentTime - this.videoTime) > 5) {\r\n\t\t\t\t\tthis.uploadVideoTime(currentTime)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.lastCurrentTime = currentTime;\r\n\t\t})\r\n\t\tvideo.addEventListener('play', () => {\r\n\t\t\tthis.uploadVideoState(false)\r\n\t\t})\r\n\t\tvideo.addEventListener('pause', () => {\r\n\t\t\tthis.uploadVideoState(true)\r\n\t\t})\r\n\t}\r\n\r\n\t// handleUsername = (e) => this.setState({ username: e.target.value })\r\n\thandleVideoUrl = (e) => {\r\n\t\tthis.videoUrl = e.target.value\r\n\t}\r\n\r\n\tuploadVideoTime = (newTime) => {\r\n\t\tsocket.emit('video-time', newTime, this.state.username)\r\n\t}\r\n\r\n\tuploadVideoState = (paused) => {\r\n\t\tsocket.emit('video-state', paused, this.state.username)\r\n\t}\r\n\r\n\tsendMessage = () => {\r\n\t\tsocket.emit('chat-message', this.state.message, this.state.username)\r\n\t\tthis.setState({ message: \"\", sender: this.state.username })\r\n\t}\r\n\r\n\tplayVideo = () => {\r\n\t\tlet video = document.getElementById('my-video')\r\n\t\tif (video && video.paused) {\r\n\t\t\tvideo.play()\r\n\t\t}\r\n\t}\r\n\r\n\tpauseVideo = () => {\r\n\t\tlet video = document.getElementById('my-video')\r\n\t\tif (video && (!video.paused)) {\r\n\t\t\tvideo.pause()\r\n\t\t}\r\n\t}\r\n\r\n\tconnect = () => {\r\n\t\tsocket.emit('video-url', this.videoUrl)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.connectToSocketServer()\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.state.connected === false){\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{background: \"white\", width: \"30%\", height: \"auto\", padding: \"20px\", minWidth: \"400px\",\r\n\t\t\t\t\t\ttextAlign: \"center\", margin: \"auto\", marginTop: \"50px\", justifyContent: \"center\"}}>\r\n\t\t\t\t\t<h1>Connecting...</h1>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.state.videoUrl === null ?\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div style={{background: \"white\", width: \"30%\", height: \"auto\", padding: \"20px\", minWidth: \"400px\",\r\n\t\t\t\t\t\t\t\ttextAlign: \"center\", margin: \"auto\", marginTop: \"50px\", justifyContent: \"center\"}}>\r\n\t\t\t\t\t\t\t<p style={{ margin: 0, fontWeight: \"bold\", paddingRight: \"50px\" }}>Set video url</p>\r\n\t\t\t\t\t\t\t<Input placeholder=\"url\" onChange={e => this.handleVideoUrl(e)} />\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.connect} style={{ margin: \"20px\" }}>Connect</Button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div style={{ justifyContent: \"center\", textAlign: \"center\", paddingTop: \"40px\" }}>\r\n\t\t\t\t\t\t\t<video id=\"my-video\" ref={this.localVideoref} autoPlay muted style={{\r\n\t\t\t\t\t\t\t\tborderStyle: \"solid\",borderColor: \"#bdbdbd\",objectFit: \"fill\",width: \"60%\",height: \"30%\"}}></video>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div className='video-container'>\r\n\r\n\t\t\t\t\t\t\t<video id=\"my-video\" controls={true} ref={this.localVideoref} autoPlay muted controlsList='nodownload' style={{\r\n\t\t\t\t\t\t\t\t\tborderStyle: \"solid\",borderColor: \"#bdbdbd\",marginTop: \"3px\",objectFit: \"fill\",\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",height: \"auto\"}} src={this.state.videoUrl}></video>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='chat-content-down' hidden={!this.state.showModal}>\r\n\t\t\t\t\t\t\t<Modal.Body style={{ overflow: \"auto\", overflowY: \"auto\", height: \"300px\", textAlign: \"left\" }} >\r\n\t\t\t\t\t\t\t\t\t{this.state.messages.length > 0 ? this.state.messages.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<div key={index} style={{textAlign: \"left\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<p style={{ wordBreak: \"break-all\" }}><b>{item.sender}</b>: {item.data}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)) : <p>No message yet</p>}\r\n\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t\t<Modal.Footer className=\"div-send-msg\" style={{background: 'white'}}>\r\n\t\t\t\t\t\t\t\t<Input placeholder=\"Message\" value={this.state.message} onChange={e => this.handleMessage(e)} />\r\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.sendMessage}>Send</Button>\r\n\t\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"chat-down\" style={{ backgroundColor: \"whitesmoke\", color: \"whitesmoke\", textAlign: \"center\"}}>\r\n\t\t\t\t\t\t\t<Badge badgeContent={this.state.newmessages} max={999} color=\"secondary\" onClick={this.toggleChat}>\r\n\t\t\t\t\t\t\t\t<IconButton style={{ color: \"#424242\" }} onClick={this.toggleChat}>\r\n\t\t\t\t\t\t\t\t\t<ChatIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Video","import React, { Component } from 'react';\r\nimport { Input, Button, IconButton } from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport \"./Home.css\"\r\n\r\nclass Home extends Component {\r\n  \tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\turl: ''\r\n\t\t}\r\n\t}\r\n\r\n\thandleChange = (e) => this.setState({ url: e.target.value })\r\n\r\n\tjoin = () => {\r\n\t\tif (this.state.url !== \"\") {\r\n\t\t\tvar url = this.state.url.split(\"/\")\r\n\t\t\twindow.location.href = `/${url[url.length-1]}`\r\n\t\t} else {\r\n\t\t\tvar url = Math.random().toString(36).substring(2, 7)\r\n\t\t\twindow.location.href = `/${url}`\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container2\">\r\n\t\t\t\t<div style={{fontSize: \"14px\", background: \"white\", width: \"10%\", textAlign: \"center\", margin: \"auto\", marginBottom: \"10px\"}}>\r\n\t\t\t\t\tSource code: \r\n\t\t\t\t\t<IconButton style={{color: \"black\"}} onClick={() => window.location.href=\"https://github.com/0x5eba/Video-Meeting\"}>\r\n\t\t\t\t\t\t<GitHubIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1 style={{ fontSize: \"45px\" }}>Video Meeting</h1>\r\n\t\t\t\t\t<p style={{ fontWeight: \"200\" }}>Video conference website that lets you stay in touch with all your friends.</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tbackground: \"white\", width: \"30%\", height: \"auto\", padding: \"20px\", minWidth: \"400px\",\r\n\t\t\t\t\ttextAlign: \"center\", margin: \"auto\", marginTop: \"100px\"\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<p style={{ margin: 0, fontWeight: \"bold\", paddingRight: \"50px\" }}>Start or join a meeting</p>\r\n\t\t\t\t\t<Input placeholder=\"URL\" onChange={e => this.handleChange(e)} />\r\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.join} style={{ margin: \"20px\" }}>Go</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\nimport Video from './Video1'\r\nimport Home from './Home'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path=\"/\" exact component={Home} />\r\n\t\t\t\t\t\t<Route path=\"/:url\" component={Video} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t// [::1] is the IPv6 localhost address.\r\n\twindow.location.hostname === '[::1]' ||\r\n\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\twindow.location.hostname.match(\r\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { 'Service-Worker': 'script' },\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then(registration => {\r\n\t\t\t\tregistration.unregister();\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.error(error.message);\r\n\t\t\t});\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<App />,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}